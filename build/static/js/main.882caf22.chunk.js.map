{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","onChange","value","Persons","persons","deletePerson","filtered","term","trim","toLowerCase","p","name","includes","map","person","key","number","onClick","window","confirm","handleDelete","getPersons","PersonForm","onSubmit","nameChange","numberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","App","useState","setPersons","setFilter","newName","setNewName","newNumber","setNewNumber","setMessage","showMessage","setTimeout","useEffect","personService","initialPersons","event","str","target","preventDefault","existingPerson","find","returnedPerson","catch","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.882caf22.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, onChange}) => {\n  return (\n    <div>\n      filter show with <input value={filter} onChange={onChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Persons = ({persons, filter, deletePerson}) => {\n  const handleDelete = person => {\n    if (window.confirm(`Delete ${person.name}`)) {\n      deletePerson(person)\n    }\n  }\n\n  const getPersons = () => {\n    let filtered = persons\n    const term = filter.trim().toLowerCase()\n    if (term !== '') {\n      filtered = persons.filter(p => p.name.toLowerCase().includes(term))\n    }\n    return filtered.map(person =>\n      <div key={person.name}>\n        {person.name} {person.number}\n        <button onClick={() => handleDelete(person)}>delete</button>\n      </div>\n    )\n  }\n  return (\n    <div>\n      {getPersons()}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({onSubmit, name, nameChange, number, numberChange}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name:\n        <input\n          value={name}\n          onChange={nameChange} />\n      </div>\n      <div>\n        number:\n        <input\n          value={number}\n          onChange={numberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n}","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.value}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ filter, setFilter ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = event => {\n    const str = event.target.value\n    setFilter(str)\n  }\n\n  const handleDeletePerson = ({id, name}) => {\n    personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        showMessage(`Deleted ${name}`, 'success')\n      })\n      .catch(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        showMessage(`Information of ${name} has already been removed from server`, 'error')\n      })\n  }\n\n  const addPerson = event => {\n    event.preventDefault()\n    const existingPerson = persons.find(p => p.name === newName)\n    if (existingPerson) {\n      if (window.confirm(`${existingPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = {\n          ...existingPerson,\n          number: newNumber\n        }\n        personService\n          .update(person.id, person)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n            showMessage(`Updated ${returnedPerson.name}`, 'success')\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(() => {\n            setPersons(persons.filter(p => p.id !== person.id))\n            showMessage(`Updating person ${person.name} has failed because it is deleted already`, 'error')\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n      return\n    }\n\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(person)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        showMessage(`Added ${returnedPerson.name}`, 'success')\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        showMessage(error.response.data.error, 'error')\n      })\n  }\n\n  const showMessage = (message, type) => {\n    setMessage({value: message, type})\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addPerson}\n        name={newName}\n        nameChange={handleNameChange}\n        number={newNumber}\n        numberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filter={filter}\n        deletePerson={handleDeletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}